#if 0
 
# The following Python code has been written to convert the Matlab colormaps
# into a hex format suitable for integration with a C program.

import os

lineLen = 0
f = open(os.sys.argv[1])
for line in f.readlines() :
	if line.find("Idx") == 0 :
		continue
	r = float(line.split()[1]) * 255.0
	g = float(line.split()[2]) * 255.0
	b = float(line.split()[3]) * 255.0
	print "0x%02x%02x%02x," %(r,g,b),
	lineLen += 10
	if lineLen > 80 :
		lineLen = 0
		print ""
f.close()
#endif

static const int colormap_river[8] = {
0x0000ff, 0x007fff, 0x00ffff, 0x7fff7f, 0xffff00, 0xff7f00, 0xff0000, 0x7f0000
};

static const int colormap_grayscale[512] = {
0x000000, 0x000000, 0x010101, 0x010101, 0x020202, 0x020202, 0x030303, 0x030303, 0x040404, 
0x040404, 0x050505, 0x050505, 0x060606, 0x060606, 0x070707, 0x070707, 0x080808, 0x080808, 
0x090909, 0x090909, 0x0a0a0a, 0x0a0a0a, 0x0b0b0b, 0x0b0b0b, 0x0c0c0c, 0x0c0c0c, 0x0d0d0d, 
0x0d0d0d, 0x0e0e0e, 0x0e0e0e, 0x0f0f0f, 0x0f0f0f, 0x101010, 0x101010, 0x111111, 0x111111, 
0x121212, 0x121212, 0x131313, 0x131313, 0x141414, 0x141414, 0x151515, 0x151515, 0x161616, 
0x161616, 0x171717, 0x171717, 0x181818, 0x181818, 0x191919, 0x191919, 0x1a1a1a, 0x1a1a1a, 
0x1b1b1b, 0x1b1b1b, 0x1c1c1c, 0x1c1c1c, 0x1d1d1d, 0x1d1d1d, 0x1e1e1e, 0x1e1e1e, 0x1f1f1f, 
0x1f1f1f, 0x202020, 0x202020, 0x212121, 0x212121, 0x222222, 0x222222, 0x232323, 0x232323, 
0x242424, 0x242424, 0x252525, 0x252525, 0x262626, 0x262626, 0x272727, 0x272727, 0x282828, 
0x282828, 0x292929, 0x292929, 0x2a2a2a, 0x2a2a2a, 0x2b2b2b, 0x2b2b2b, 0x2c2c2c, 0x2c2c2c, 
0x2d2d2d, 0x2d2d2d, 0x2e2e2e, 0x2e2e2e, 0x2f2f2f, 0x2f2f2f, 0x303030, 0x303030, 0x313131, 
0x313131, 0x323232, 0x323232, 0x333333, 0x333333, 0x343434, 0x343434, 0x353535, 0x353535, 
0x363636, 0x363636, 0x373737, 0x373737, 0x383838, 0x383838, 0x393939, 0x393939, 0x3a3a3a, 
0x3a3a3a, 0x3b3b3b, 0x3b3b3b, 0x3c3c3c, 0x3c3c3c, 0x3d3d3d, 0x3d3d3d, 0x3e3e3e, 0x3e3e3e, 
0x3f3f3f, 0x3f3f3f, 0x404040, 0x404040, 0x414141, 0x414141, 0x424242, 0x424242, 0x434343, 
0x434343, 0x444444, 0x444444, 0x454545, 0x454545, 0x464646, 0x464646, 0x474747, 0x474747, 
0x484848, 0x484848, 0x494949, 0x494949, 0x4a4a4a, 0x4a4a4a, 0x4b4b4b, 0x4b4b4b, 0x4c4c4c, 
0x4c4c4c, 0x4d4d4d, 0x4d4d4d, 0x4e4e4e, 0x4e4e4e, 0x4f4f4f, 0x4f4f4f, 0x505050, 0x505050, 
0x515151, 0x515151, 0x525252, 0x525252, 0x535353, 0x535353, 0x545454, 0x545454, 0x555555, 
0x555555, 0x565656, 0x565656, 0x575757, 0x575757, 0x585858, 0x585858, 0x595959, 0x595959, 
0x5a5a5a, 0x5a5a5a, 0x5b5b5b, 0x5b5b5b, 0x5c5c5c, 0x5c5c5c, 0x5d5d5d, 0x5d5d5d, 0x5e5e5e, 
0x5e5e5e, 0x5f5f5f, 0x5f5f5f, 0x606060, 0x606060, 0x616161, 0x616161, 0x626262, 0x626262, 
0x636363, 0x636363, 0x646464, 0x646464, 0x656565, 0x656565, 0x666666, 0x666666, 0x676767, 
0x676767, 0x686868, 0x686868, 0x696969, 0x696969, 0x6a6a6a, 0x6a6a6a, 0x6b6b6b, 0x6b6b6b, 
0x6c6c6c, 0x6c6c6c, 0x6d6d6d, 0x6d6d6d, 0x6e6e6e, 0x6e6e6e, 0x6f6f6f, 0x6f6f6f, 0x707070, 
0x707070, 0x717171, 0x717171, 0x727272, 0x727272, 0x737373, 0x737373, 0x747474, 0x747474, 
0x757575, 0x757575, 0x767676, 0x767676, 0x777777, 0x777777, 0x787878, 0x787878, 0x797979, 
0x797979, 0x7a7a7a, 0x7a7a7a, 0x7b7b7b, 0x7b7b7b, 0x7c7c7c, 0x7c7c7c, 0x7d7d7d, 0x7d7d7d, 
0x7e7e7e, 0x7e7e7e, 0x7f7f7f, 0x7f7f7f, 0x808080, 0x808080, 0x818181, 0x818181, 0x828282, 
0x828282, 0x838383, 0x838383, 0x848484, 0x848484, 0x858585, 0x858585, 0x868686, 0x868686, 
0x878787, 0x878787, 0x888888, 0x888888, 0x898989, 0x898989, 0x8a8a8a, 0x8a8a8a, 0x8b8b8b, 
0x8b8b8b, 0x8c8c8c, 0x8c8c8c, 0x8d8d8d, 0x8d8d8d, 0x8e8e8e, 0x8e8e8e, 0x8f8f8f, 0x8f8f8f, 
0x909090, 0x909090, 0x919191, 0x919191, 0x929292, 0x929292, 0x939393, 0x939393, 0x949494, 
0x949494, 0x959595, 0x959595, 0x969696, 0x969696, 0x979797, 0x979797, 0x989898, 0x989898, 
0x999999, 0x999999, 0x9a9a9a, 0x9a9a9a, 0x9b9b9b, 0x9b9b9b, 0x9c9c9c, 0x9c9c9c, 0x9d9d9d, 
0x9d9d9d, 0x9e9e9e, 0x9e9e9e, 0x9f9f9f, 0x9f9f9f, 0xa0a0a0, 0xa0a0a0, 0xa1a1a1, 0xa1a1a1, 
0xa2a2a2, 0xa2a2a2, 0xa3a3a3, 0xa3a3a3, 0xa4a4a4, 0xa4a4a4, 0xa5a5a5, 0xa5a5a5, 0xa6a6a6, 
0xa6a6a6, 0xa7a7a7, 0xa7a7a7, 0xa8a8a8, 0xa8a8a8, 0xa9a9a9, 0xa9a9a9, 0xaaaaaa, 0xaaaaaa, 
0xababab, 0xababab, 0xacacac, 0xacacac, 0xadadad, 0xadadad, 0xaeaeae, 0xaeaeae, 0xafafaf, 
0xafafaf, 0xb0b0b0, 0xb0b0b0, 0xb1b1b1, 0xb1b1b1, 0xb2b2b2, 0xb2b2b2, 0xb3b3b3, 0xb3b3b3, 
0xb4b4b4, 0xb4b4b4, 0xb5b5b5, 0xb5b5b5, 0xb6b6b6, 0xb6b6b6, 0xb7b7b7, 0xb7b7b7, 0xb8b8b8, 
0xb8b8b8, 0xb9b9b9, 0xb9b9b9, 0xbababa, 0xbababa, 0xbbbbbb, 0xbbbbbb, 0xbcbcbc, 0xbcbcbc, 
0xbdbdbd, 0xbdbdbd, 0xbebebe, 0xbebebe, 0xbfbfbf, 0xbfbfbf, 0xc0c0c0, 0xc0c0c0, 0xc1c1c1, 
0xc1c1c1, 0xc2c2c2, 0xc2c2c2, 0xc3c3c3, 0xc3c3c3, 0xc4c4c4, 0xc4c4c4, 0xc5c5c5, 0xc5c5c5, 
0xc6c6c6, 0xc6c6c6, 0xc7c7c7, 0xc7c7c7, 0xc8c8c8, 0xc8c8c8, 0xc9c9c9, 0xc9c9c9, 0xcacaca, 
0xcacaca, 0xcbcbcb, 0xcbcbcb, 0xcccccc, 0xcccccc, 0xcdcdcd, 0xcdcdcd, 0xcecece, 0xcecece, 
0xcfcfcf, 0xcfcfcf, 0xd0d0d0, 0xd0d0d0, 0xd1d1d1, 0xd1d1d1, 0xd2d2d2, 0xd2d2d2, 0xd3d3d3, 
0xd3d3d3, 0xd4d4d4, 0xd4d4d4, 0xd5d5d5, 0xd5d5d5, 0xd6d6d6, 0xd6d6d6, 0xd7d7d7, 0xd7d7d7, 
0xd8d8d8, 0xd8d8d8, 0xd9d9d9, 0xd9d9d9, 0xdadada, 0xdadada, 0xdbdbdb, 0xdbdbdb, 0xdcdcdc, 
0xdcdcdc, 0xdddddd, 0xdddddd, 0xdedede, 0xdedede, 0xdfdfdf, 0xdfdfdf, 0xe0e0e0, 0xe0e0e0, 
0xe1e1e1, 0xe1e1e1, 0xe2e2e2, 0xe2e2e2, 0xe3e3e3, 0xe3e3e3, 0xe4e4e4, 0xe4e4e4, 0xe5e5e5, 
0xe5e5e5, 0xe6e6e6, 0xe6e6e6, 0xe7e7e7, 0xe7e7e7, 0xe8e8e8, 0xe8e8e8, 0xe9e9e9, 0xe9e9e9, 
0xeaeaea, 0xeaeaea, 0xebebeb, 0xebebeb, 0xececec, 0xececec, 0xededed, 0xededed, 0xeeeeee, 
0xeeeeee, 0xefefef, 0xefefef, 0xf0f0f0, 0xf0f0f0, 0xf1f1f1, 0xf1f1f1, 0xf2f2f2, 0xf2f2f2, 
0xf3f3f3, 0xf3f3f3, 0xf4f4f4, 0xf4f4f4, 0xf5f5f5, 0xf5f5f5, 0xf6f6f6, 0xf6f6f6, 0xf7f7f7, 
0xf7f7f7, 0xf8f8f8, 0xf8f8f8, 0xf9f9f9, 0xf9f9f9, 0xfafafa, 0xfafafa, 0xfbfbfb, 0xfbfbfb, 
0xfcfcfc, 0xfcfcfc, 0xfdfdfd, 0xfdfdfd, 0xfefefe, 0xfefefe, 0xffffff, 0xffffff
};

static const int colormap_mild[512] = {
0x2438af, 0x253ab0, 0x253bb1, 0x253db3, 0x253eb4, 0x253fb6, 0x2541b7, 0x2542b9, 0x2543ba, 
0x2545bc, 0x2546bd, 0x2548bf, 0x2549c0, 0x254ac2, 0x254cc3, 0x254dc5, 0x254ec6, 0x2550c8, 
0x2651c9, 0x2653cb, 0x2654cc, 0x2655ce, 0x2657cf, 0x2658d1, 0x2659d2, 0x265bd4, 0x265cd5, 
0x265dd7, 0x265fd8, 0x2660da, 0x2662db, 0x2663dd, 0x2664de, 0x2666e0, 0x2667e1, 0x2768e3, 
0x276ae4, 0x276be6, 0x276de7, 0x276ee9, 0x276fea, 0x2771eb, 0x2772ed, 0x2773ee, 0x2775f0, 
0x2776f1, 0x2778f3, 0x2779f4, 0x277af6, 0x277cf7, 0x277df9, 0x277efa, 0x2880fb, 0x2881fb, 
0x2882fb, 0x2883fb, 0x2885fb, 0x2986fb, 0x2987fb, 0x2988fb, 0x2989fb, 0x298bfb, 0x2a8cfb, 
0x2a8dfb, 0x2a8efc, 0x2a90fc, 0x2a91fc, 0x2b92fc, 0x2b93fc, 0x2b95fc, 0x2b96fc, 0x2b97fc, 
0x2c98fc, 0x2c9afc, 0x2c9bfc, 0x2c9cfc, 0x2c9dfc, 0x2d9efd, 0x2da0fd, 0x2da1fd, 0x2da2fd, 
0x2da3fd, 0x2ea5fd, 0x2ea6fd, 0x2ea7fd, 0x2ea8fd, 0x2eaafd, 0x2fabfd, 0x2facfd, 0x2fadfd, 
0x2faefe, 0x2fb0fe, 0x30b1fe, 0x30b2fe, 0x30b3fe, 0x30b5fe, 0x30b6fe, 0x30b7fe, 0x31b8fe, 
0x31bafe, 0x31bbfe, 0x31bcfe, 0x31bdfe, 0x32beff, 0x33bfff, 0x35c0ff, 0x36c1ff, 0x37c2ff, 
0x38c3ff, 0x39c3ff, 0x3ac4ff, 0x3bc5ff, 0x3cc6ff, 0x3dc7ff, 0x3ec8ff, 0x40c9ff, 0x41caff, 
0x42cbff, 0x43cbff, 0x44ccff, 0x45cdff, 0x46ceff, 0x47cfff, 0x48d0ff, 0x49d1ff, 0x4ad2ff, 
0x4cd2ff, 0x4dd3ff, 0x4ed4ff, 0x4fd5ff, 0x50d6ff, 0x51d7ff, 0x52d8ff, 0x53d9ff, 0x54daff, 
0x55daff, 0x57dbff, 0x58dcff, 0x59ddff, 0x5adeff, 0x5bdfff, 0x5ce0ff, 0x5de1ff, 0x5ee1ff, 
0x5fe2ff, 0x60e3ff, 0x62e4ff, 0x63e5ff, 0x64e6ff, 0x65e7ff, 0x66e8ff, 0x67e8ff, 0x68e9ff, 
0x69eaff, 0x6aebfd, 0x6bebfc, 0x6bebfa, 0x6cebf9, 0x6cebf7, 0x6debf5, 0x6eebf4, 0x6eebf2, 
0x6febf1, 0x70ebef, 0x70ebee, 0x71ebec, 0x71ebea, 0x72ebe9, 0x73ebe7, 0x73ebe6, 0x74ebe4, 
0x75ebe2, 0x75ebe1, 0x76ebdf, 0x76ebde, 0x77ebdc, 0x78ebdb, 0x78ebd9, 0x79ebd7, 0x7aebd6, 
0x7aebd4, 0x7bebd3, 0x7bebd1, 0x7cebcf, 0x7debce, 0x7debcc, 0x7eebcb, 0x7febc9, 0x7febc7, 
0x80ebc6, 0x80ebc4, 0x81ebc3, 0x82ebc1, 0x82ebc0, 0x83ebbe, 0x84ebbc, 0x84ebbb, 0x85ebb9, 
0x85ebb8, 0x86ebb6, 0x87ebb4, 0x87ebb3, 0x88ebb1, 0x89ebb0, 0x89ebae, 0x8aecad, 0x8cecad, 
0x8decad, 0x8eedad, 0x90edac, 0x91eeac, 0x92eeac, 0x93eeac, 0x95efab, 0x96efab, 0x97efab, 
0x99f0ab, 0x9af0ab, 0x9bf1aa, 0x9df1aa, 0x9ef1aa, 0x9ff2aa, 0xa1f2a9, 0xa2f2a9, 0xa3f3a9, 
0xa5f3a9, 0xa6f4a8, 0xa7f4a8, 0xa8f4a8, 0xaaf5a8, 0xabf5a7, 0xacf5a7, 0xaef6a7, 0xaff6a7, 
0xb0f7a7, 0xb2f7a6, 0xb3f7a6, 0xb4f8a6, 0xb6f8a6, 0xb7f8a5, 0xb8f9a5, 0xb9f9a5, 0xbbf9a5, 
0xbcfaa4, 0xbdfaa4, 0xbffba4, 0xc0fba4, 0xc1fba3, 0xc3fca3, 0xc4fca3, 0xc5fca3, 0xc7fda3, 
0xc8fda2, 0xc9fea2, 0xcbfea2, 0xccfea2, 0xcdfea1, 0xcefea0, 0xcefe9f, 0xcffd9f, 0xd0fd9e, 
0xd0fc9d, 0xd1fc9c, 0xd2fc9b, 0xd2fb9b, 0xd3fb9a, 0xd4fb99, 0xd4fa98, 0xd5fa97, 0xd6f997, 
0xd6f996, 0xd7f995, 0xd8f894, 0xd8f893, 0xd9f893, 0xdaf792, 0xdbf791, 0xdbf790, 0xdcf68f, 
0xddf68f, 0xddf58e, 0xdef58d, 0xdff58c, 0xdff48b, 0xe0f48b, 0xe1f48a, 0xe1f389, 0xe2f388, 
0xe3f287, 0xe3f287, 0xe4f286, 0xe5f185, 0xe6f184, 0xe6f183, 0xe7f083, 0xe8f082, 0xe8ef81, 
0xe9ef80, 0xeaef7f, 0xeaee7f, 0xebee7e, 0xecee7d, 0xeced7c, 0xeded7b, 0xeeec7b, 0xeeec7a, 
0xefec79, 0xf0eb78, 0xf0ea78, 0xf0e977, 0xf0e876, 0xf1e776, 0xf1e775, 0xf1e674, 0xf2e574, 
0xf2e473, 0xf2e372, 0xf3e272, 0xf3e171, 0xf3e070, 0xf3df70, 0xf4de6f, 0xf4dd6e, 0xf4dc6e, 
0xf5db6d, 0xf5db6c, 0xf5da6c, 0xf5d96b, 0xf6d86a, 0xf6d76a, 0xf6d669, 0xf7d568, 0xf7d468, 
0xf7d367, 0xf8d266, 0xf8d166, 0xf8d065, 0xf8d064, 0xf9cf64, 0xf9ce63, 0xf9cd62, 0xfacc62, 
0xfacb61, 0xfaca60, 0xfac960, 0xfbc85f, 0xfbc75e, 0xfbc65e, 0xfcc55d, 0xfcc55c, 0xfcc45c, 
0xfdc35b, 0xfdc25a, 0xfdc15a, 0xfdc059, 0xfebf58, 0xfebe58, 0xfebd57, 0xffbc56, 0xffbc56, 
0xffbb56, 0xffbb55, 0xffba55, 0xffba55, 0xffb954, 0xffb854, 0xffb853, 0xffb753, 0xffb753, 
0xffb652, 0xffb652, 0xffb552, 0xffb551, 0xffb451, 0xffb450, 0xffb350, 0xffb250, 0xffb24f, 
0xffb14f, 0xffb14f, 0xffb04e, 0xffb04e, 0xffaf4d, 0xffaf4d, 0xffae4d, 0xffae4c, 0xffad4c, 
0xffac4c, 0xffac4b, 0xffab4b, 0xffab4a, 0xffaa4a, 0xffaa4a, 0xffa949, 0xffa949, 0xffa849, 
0xffa848, 0xffa748, 0xffa648, 0xffa647, 0xffa547, 0xffa546, 0xffa446, 0xffa446, 0xffa345, 
0xffa345, 0xffa245, 0xffa144, 0xffa144, 0xffa144, 0xffa145, 0xffa246, 0xffa248, 0xffa349, 
0xffa34a, 0xffa44b, 0xffa44d, 0xffa54e, 0xffa54f, 0xffa550, 0xffa652, 0xffa653, 0xffa754, 
0xffa756, 0xffa857, 0xffa858, 0xffa959, 0xffa95b, 0xffaa5c, 0xffaa5d, 0xffab5e, 0xffab60, 
0xffac61, 0xffac62, 0xffad64, 0xffad65, 0xffae66, 0xffae67, 0xffaf69, 0xffaf6a, 0xffb06b, 
0xffb06c, 0xffb16e, 0xffb16f, 0xffb270, 0xffb272, 0xffb373, 0xffb374, 0xffb475, 0xffb477, 
0xffb578, 0xffb579, 0xffb67a, 0xffb67c, 0xffb77d, 0xffb77e, 0xffb880, 0xffb881, 0xffb982, 
0xffb983, 0xffba85, 0xffbb87, 0xffbc8a, 0xffbe8c, 0xffbf8e, 0xffc091, 0xffc293, 0xffc395, 
0xffc498, 0xffc69a, 0xffc79d, 0xffc89f, 0xffcaa1, 0xffcba4, 0xffcda6, 0xffcea9, 0xffcfab, 
0xffd1ad, 0xffd2b0, 0xffd3b2, 0xffd5b4, 0xffd6b7, 0xffd7b9, 0xffd9bc, 0xffdabe, 0xffdbc0, 
0xffddc3, 0xffdec5, 0xffdfc8, 0xffe1ca, 0xffe2cc, 0xffe3cf, 0xffe5d1, 0xffe6d4, 0xffe8d6, 
0xffe9d8, 0xffeadb, 0xffecdd, 0xffeddf, 0xffeee2, 0xfff0e4, 0xfff1e7, 0xfff2e9, 0xfff4eb, 
0xfff5ee, 0xfff6f0, 0xfff8f3, 0xfff9f5, 0xfffaf7, 0xfffcfa, 0xfffdfc, 0xffffff
};

static const int colormap_drastic[512] = {
0x000081, 0x000083, 0x000085, 0x000087, 0x000089, 0x00008b, 0x00008d, 0x00008f, 0x000091, 
0x000093, 0x000095, 0x000097, 0x000099, 0x00009b, 0x00009d, 0x00009f, 0x0000a1, 0x0000a3, 
0x0000a5, 0x0000a7, 0x0000a9, 0x0000ab, 0x0000ad, 0x0000af, 0x0000b1, 0x0000b3, 0x0000b5, 
0x0000b7, 0x0000b9, 0x0000bb, 0x0000bd, 0x0000bf, 0x0000c1, 0x0000c3, 0x0000c5, 0x0000c7, 
0x0000c9, 0x0000cb, 0x0000cd, 0x0000cf, 0x0000d1, 0x0000d3, 0x0000d5, 0x0000d7, 0x0000d9, 
0x0000db, 0x0000dd, 0x0000df, 0x0000e1, 0x0000e3, 0x0000e5, 0x0000e7, 0x0000e9, 0x0000eb, 
0x0000ed, 0x0000ef, 0x0000f1, 0x0000f3, 0x0000f5, 0x0000f7, 0x0000f9, 0x0000fb, 0x0000fd, 
0x0000ff, 0x0001ff, 0x0003ff, 0x0005ff, 0x0007ff, 0x0009ff, 0x000bff, 0x000dff, 0x000fff, 
0x0011ff, 0x0013ff, 0x0015ff, 0x0017ff, 0x0019ff, 0x001bff, 0x001dff, 0x001fff, 0x0021ff, 
0x0023ff, 0x0025ff, 0x0027ff, 0x0029ff, 0x002bff, 0x002dff, 0x002fff, 0x0031ff, 0x0033ff, 
0x0035ff, 0x0037ff, 0x0039ff, 0x003bff, 0x003dff, 0x003fff, 0x0041ff, 0x0043ff, 0x0045ff, 
0x0047ff, 0x0049ff, 0x004bff, 0x004dff, 0x004fff, 0x0051ff, 0x0053ff, 0x0055ff, 0x0057ff, 
0x0059ff, 0x005bff, 0x005dff, 0x005fff, 0x0061ff, 0x0063ff, 0x0065ff, 0x0067ff, 0x0069ff, 
0x006bff, 0x006dff, 0x006fff, 0x0071ff, 0x0073ff, 0x0075ff, 0x0077ff, 0x0079ff, 0x007bff, 
0x007dff, 0x007fff, 0x0081ff, 0x0083ff, 0x0085ff, 0x0087ff, 0x0089ff, 0x008bff, 0x008dff, 
0x008fff, 0x0091ff, 0x0093ff, 0x0095ff, 0x0097ff, 0x0099ff, 0x009bff, 0x009dff, 0x009fff, 
0x00a1ff, 0x00a3ff, 0x00a5ff, 0x00a7ff, 0x00a9ff, 0x00abff, 0x00adff, 0x00afff, 0x00b1ff, 
0x00b3ff, 0x00b5ff, 0x00b7ff, 0x00b9ff, 0x00bbff, 0x00bdff, 0x00bfff, 0x00c1ff, 0x00c3ff, 
0x00c5ff, 0x00c7ff, 0x00c9ff, 0x00cbff, 0x00cdff, 0x00cfff, 0x00d1ff, 0x00d3ff, 0x00d5ff, 
0x00d7ff, 0x00d9ff, 0x00dbff, 0x00ddff, 0x00dfff, 0x00e1ff, 0x00e3ff, 0x00e5ff, 0x00e7ff, 
0x00e9ff, 0x00ebff, 0x00edff, 0x00efff, 0x00f1ff, 0x00f3ff, 0x00f5ff, 0x00f7ff, 0x00f9ff, 
0x00fbff, 0x00fdff, 0x00ffff, 0x01fffd, 0x03fffb, 0x05fff9, 0x07fff7, 0x09fff5, 0x0bfff3, 
0x0dfff1, 0x0fffef, 0x11ffed, 0x13ffeb, 0x15ffe9, 0x17ffe7, 0x19ffe5, 0x1bffe3, 0x1dffe1, 
0x1fffdf, 0x21ffdd, 0x23ffdb, 0x25ffd9, 0x27ffd7, 0x29ffd5, 0x2bffd3, 0x2dffd1, 0x2fffcf, 
0x31ffcd, 0x33ffcb, 0x35ffc9, 0x37ffc7, 0x39ffc5, 0x3bffc3, 0x3dffc1, 0x3fffbf, 0x41ffbd, 
0x43ffbb, 0x45ffb9, 0x47ffb7, 0x49ffb5, 0x4bffb3, 0x4dffb1, 0x4fffaf, 0x51ffad, 0x53ffab, 
0x55ffa9, 0x57ffa7, 0x59ffa5, 0x5bffa3, 0x5dffa1, 0x5fff9f, 0x61ff9d, 0x63ff9b, 0x65ff99, 
0x67ff97, 0x69ff95, 0x6bff93, 0x6dff91, 0x6fff8f, 0x71ff8d, 0x73ff8b, 0x75ff89, 0x77ff87, 
0x79ff85, 0x7bff83, 0x7dff81, 0x7fff7f, 0x81ff7d, 0x83ff7b, 0x85ff79, 0x87ff77, 0x89ff75, 
0x8bff73, 0x8dff71, 0x8fff6f, 0x91ff6d, 0x93ff6b, 0x95ff69, 0x97ff67, 0x99ff65, 0x9bff63, 
0x9dff61, 0x9fff5f, 0xa1ff5d, 0xa3ff5b, 0xa5ff59, 0xa7ff57, 0xa9ff55, 0xabff53, 0xadff51, 
0xafff4f, 0xb1ff4d, 0xb3ff4b, 0xb5ff49, 0xb7ff47, 0xb9ff45, 0xbbff43, 0xbdff41, 0xbfff3f, 
0xc1ff3d, 0xc3ff3b, 0xc5ff39, 0xc7ff37, 0xc9ff35, 0xcbff33, 0xcdff31, 0xcfff2f, 0xd1ff2d, 
0xd3ff2b, 0xd5ff29, 0xd7ff27, 0xd9ff25, 0xdbff23, 0xddff21, 0xdfff1f, 0xe1ff1d, 0xe3ff1b, 
0xe5ff19, 0xe7ff17, 0xe9ff15, 0xebff13, 0xedff11, 0xefff0f, 0xf1ff0d, 0xf3ff0b, 0xf5ff09, 
0xf7ff07, 0xf9ff05, 0xfbff03, 0xfdff01, 0xffff00, 0xfffd00, 0xfffb00, 0xfff900, 0xfff700, 
0xfff500, 0xfff300, 0xfff100, 0xffef00, 0xffed00, 0xffeb00, 0xffe900, 0xffe700, 0xffe500, 
0xffe300, 0xffe100, 0xffdf00, 0xffdd00, 0xffdb00, 0xffd900, 0xffd700, 0xffd500, 0xffd300, 
0xffd100, 0xffcf00, 0xffcd00, 0xffcb00, 0xffc900, 0xffc700, 0xffc500, 0xffc300, 0xffc100, 
0xffbf00, 0xffbd00, 0xffbb00, 0xffb900, 0xffb700, 0xffb500, 0xffb300, 0xffb100, 0xffaf00, 
0xffad00, 0xffab00, 0xffa900, 0xffa700, 0xffa500, 0xffa300, 0xffa100, 0xff9f00, 0xff9d00, 
0xff9b00, 0xff9900, 0xff9700, 0xff9500, 0xff9300, 0xff9100, 0xff8f00, 0xff8d00, 0xff8b00, 
0xff8900, 0xff8700, 0xff8500, 0xff8300, 0xff8100, 0xff7f00, 0xff7d00, 0xff7b00, 0xff7900, 
0xff7700, 0xff7500, 0xff7300, 0xff7100, 0xff6f00, 0xff6d00, 0xff6b00, 0xff6900, 0xff6700, 
0xff6500, 0xff6300, 0xff6100, 0xff5f00, 0xff5d00, 0xff5b00, 0xff5900, 0xff5700, 0xff5500, 
0xff5300, 0xff5100, 0xff4f00, 0xff4d00, 0xff4b00, 0xff4900, 0xff4700, 0xff4500, 0xff4300, 
0xff4100, 0xff3f00, 0xff3d00, 0xff3b00, 0xff3900, 0xff3700, 0xff3500, 0xff3300, 0xff3100, 
0xff2f00, 0xff2d00, 0xff2b00, 0xff2900, 0xff2700, 0xff2500, 0xff2300, 0xff2100, 0xff1f00, 
0xff1d00, 0xff1b00, 0xff1900, 0xff1700, 0xff1500, 0xff1300, 0xff1100, 0xff0f00, 0xff0d00, 
0xff0b00, 0xff0900, 0xff0700, 0xff0500, 0xff0300, 0xff0100, 0xff0000, 0xfd0000, 0xfb0000, 
0xf90000, 0xf70000, 0xf50000, 0xf30000, 0xf10000, 0xef0000, 0xed0000, 0xeb0000, 0xe90000, 
0xe70000, 0xe50000, 0xe30000, 0xe10000, 0xdf0000, 0xdd0000, 0xdb0000, 0xd90000, 0xd70000, 
0xd50000, 0xd30000, 0xd10000, 0xcf0000, 0xcd0000, 0xcb0000, 0xc90000, 0xc70000, 0xc50000, 
0xc30000, 0xc10000, 0xbf0000, 0xbd0000, 0xbb0000, 0xb90000, 0xb70000, 0xb50000, 0xb30000, 
0xb10000, 0xaf0000, 0xad0000, 0xab0000, 0xa90000, 0xa70000, 0xa50000, 0xa30000, 0xa10000, 
0x9f0000, 0x9d0000, 0x9b0000, 0x990000, 0x970000, 0x950000, 0x930000, 0x910000, 0x8f0000, 
0x8d0000, 0x8b0000, 0x890000, 0x870000, 0x850000, 0x830000, 0x810000, 0x7f0000
};
